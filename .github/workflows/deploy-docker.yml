name: Deploy Docker to EC2

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: eu-north-1
  ECR_REPO: my-api
  ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ec2-user
  EC2_APP_DIR: /opt/app

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.5'

      - name: Build JAR with Gradle
        run: gradle clean bootJar

      - name: Prepare app.jar
        run: |
          JAR=$(ls build/libs/*.jar | head -n1)
          cp "$JAR" app.jar

      - name: List build files
        run: |
          echo "=== Build directory contents ==="
          ls -la build/
          echo "=== Build/libs directory contents ==="
          ls -la build/libs/
          echo "=== Current directory contents ==="
          ls -la

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        run: |
          echo "=== Docker 빌드 시작 ==="
          echo "현재 디렉토리: $(pwd)"
          echo "app.jar 파일 확인:"
          ls -la app.jar
          echo "Docker 빌드 컨텍스트 확인:"
          ls -la
          
          docker build -t "$ECR_REPO:latest" .
          docker tag "$ECR_REPO:latest" "$ECR_REGISTRY/$ECR_REPO:latest"
          docker tag "$ECR_REPO:latest" "$ECR_REGISTRY/$ECR_REPO:${{ github.sha }}"
          docker push "$ECR_REGISTRY/$ECR_REPO:latest"
          docker push "$ECR_REGISTRY/$ECR_REPO:${{ github.sha }}"

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          echo "=== 애플리케이션 배포 시작 ==="
          
          # ECR 로그인
          echo "--- ECR 로그인 ---"
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

          # 이미지 pull 및 실행
          echo "--- 이미지 pull 및 실행 ---"
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            cd /opt/app
            docker-compose -f /opt/app/docker-compose.yml pull
            docker-compose -f /opt/app/docker-compose.yml up -d
            docker ps
            sleep 10
            docker logs $(docker ps -q)
            curl -s http://127.0.0.1:8080/actuator/health || echo "Health check failed"
          EOF
          
          echo "=== 최종 배포 결과 ==="
